plugins {
    id 'java'

    id "idea"

    id 'application'

    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.8'

}

group 'com.example.me'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

// define the protobuf versions
def grpcVersion = '1.27.2' // CURRENT_GRPC_VERSION
def protobufVersion = '3.11.1'
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // import/compile the grpc library here
    compile 'io.grpc:grpc-netty-shaded:1.27.2'
    compile 'io.grpc:grpc-protobuf:1.27.2'
    compile 'io.grpc:grpc-stub:1.27.2'

    // insert/compile protobuf files
    compile "io.grpc:grpc-stub:${grpcVersion}"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}


startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = "io.github.caio.grpc.HelloWorldServer"
    applicationName = "hello-world-server"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = "io.github.caio.grpc.HelloWorldClient"
    applicationName = "hello-world-client"
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

wrapper {
    gradleVersion = "5.1.1"
    distributionType = Wrapper.DistributionType.ALL
}